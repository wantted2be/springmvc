<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--扫描组件-->
    <context:component-scan base-package="com.company.mvc"></context:component-scan>

    <!--配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--path：设置处理的请求地址
	    view-name：设置请求地址所对应的视图名称-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>

    <!--静态资源-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>

    <!--当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，
        此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--配置方式可以通过ref或bean标签设置拦截器，
        通过mvc:mapping设置需要拦截的请求，
        通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求-->
    <mvc:interceptors>
        <ref bean="firstInterceptor"></ref>
        <ref bean="secondInterceptor"></ref>
        <!--<bean class="com.company.mvc.intercepters.FirstInterceptor"></bean>-->
        <!--<ref bean="firstInterceptor"></ref>-->
<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;拦截所有&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash;排除/&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/"/>-->
<!--            <ref bean="firstInterceptor"></ref>-->
<!--        </mvc:interceptor>-->
    </mvc:interceptors>

<!--    配置异常处理-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        <!--默认放在请求域的键-->
        <property name="exceptionAttribute" value="ex"></property>
    </bean>



</beans>